# -*- coding: utf-8 -*-
"""
Created on Thur June 14 15:44:58 2018

@author: Gustavo Cid (gustavo.cid@ektrum.com)
"""

import numpy as np
from scipy.interpolate import interp1d


class AntennaADU4516R0():

    def __init__(self):

        self.horizontal_pattern = None
        self.vertical_pattern = None

        # initializing the horizontal and vertical patterns
        self.initialize_horizontal_pattern()
        self.initialize_vertical_pattern()

    def initialize_horizontal_pattern(self):
        """
        Initializes the antenna element horizontal radiation pattern.
        This is done in initialization time to save some computation
        :return: None
        """

        PHI_VALS = np.arange(-180, 180, step=1)
        G_H_VALS = [-19.5600, -19.5400, -19.5200, -19.5100, -19.5000, -19.5000, -19.5200, -19.5400, -19.5700, -19.6100,
                    -19.6600, -19.7300, -19.8000, -19.8900, -19.9900, -20.1100, -20.2400, -20.3900, -20.5600, -20.7500,
                    -20.9600, -21.1900, -21.4300, -21.7000, -22.0000, -22.3100, -22.6400, -22.9900, -23.3600, -23.7300,
                    -24.1000, -24.4600, -24.7800, -25.0400, -25.2200, -25.2900, -25.2300, -25.0300, -24.6800, -24.2400,
                    -23.6800, -23.0600, -22.4100, -21.7300, -21.0500, -20.3700, -19.7000, -19.0500, -18.4200, -17.8100,
                    -17.2200, -16.6500, -16.1000, -15.5800, -15.0700, -14.5800, -14.1100, -13.6500, -13.2100, -12.7900,
                    -12.3700, -11.9700, -11.5900, -11.2100, -10.8400, -10.4900, -10.1400, -9.8000, -9.4700, -9.1400,
                    -8.8200, -8.5100, -8.2000, -7.8900, -7.5900, -7.3000, -7.0000, -6.7100, -6.4200, -6.1300, -5.8400,
                    -5.5600, -5.2700, -4.9900, -4.7000, -4.4100, -4.1300, -3.8400, -3.5500, -3.2600, -2.9700, -2.6700,
                    -2.3800, -2.0800, -1.7800, -1.4800, -1.1800, -0.8700, -0.5700, -0.2600, 0.0500, 0.3600, 0.6700,
                    0.9800, 1.2900, 1.6000, 1.9100, 2.2300, 2.5400, 2.8500, 3.1600, 3.4700, 3.7800, 4.0800, 4.3900,
                    4.6900, 4.9900, 5.2900, 5.5900, 5.8800, 6.1700, 6.4600, 6.7400, 7.0300, 7.3100, 7.5800, 7.8500,
                    8.1200, 8.3800, 8.6400, 8.9000, 9.1500, 9.3900, 9.6400, 9.8800, 10.1100, 10.3400, 10.5600, 10.7800,
                    11.0000, 11.2100, 11.4200, 11.6200, 11.8100, 12.0000, 12.1900, 12.3700, 12.5500, 12.7200, 12.8900,
                    13.0500, 13.2000, 13.3600, 13.5000, 13.6400, 13.7800, 13.9100, 14.0400, 14.1600, 14.2700, 14.3800,
                    14.4900, 14.5900, 14.6900, 14.7800, 14.8600, 14.9400, 15.0200, 15.0900, 15.1600, 15.2200, 15.2700,
                    15.3200, 15.3700, 15.4100, 15.4400, 15.4700, 15.5000, 15.5200, 15.5300, 15.5400, 15.5500, 15.5500,
                    15.5400, 15.5300, 15.5200, 15.5000, 15.4700, 15.4500, 15.4100, 15.3700, 15.3300, 15.2800, 15.2200,
                    15.1600, 15.1000, 15.0300, 14.9500, 14.8700, 14.7900, 14.7000, 14.6100, 14.5100, 14.4000, 14.3000,
                    14.1800, 14.0600, 13.9400, 13.8100, 13.6800, 13.5400, 13.4000, 13.2500, 13.1000, 12.9400, 12.7800,
                    12.6100, 12.4400, 12.2700, 12.0900, 11.9000, 11.7100, 11.5200, 11.3200, 11.1200, 10.9100, 10.7000,
                    10.4800, 10.2600, 10.0300, 9.8000, 9.5700, 9.3300, 9.0900, 8.8400, 8.5900, 8.3400, 8.0800, 7.8100,
                    7.5500, 7.2800, 7.0100, 6.7300, 6.4500, 6.1700, 5.8800, 5.5900, 5.3000, 5.0000, 4.7100, 4.4100,
                    4.1000, 3.8000, 3.4900, 3.1800, 2.8700, 2.5600, 2.2500, 1.9300, 1.6100, 1.3000, 0.9800, 0.6600,
                    0.3400, 0.0200, -0.3000, -0.6200, -0.9400, -1.2500, -1.5700, -1.8900, -2.2100, -2.5300, -2.8400,
                    -3.1600, -3.4700, -3.7800, -4.0900, -4.4000, -4.7100, -5.0200, -5.3300, -5.6400, -5.9400, -6.2500,
                    -6.5500, -6.8500, -7.1600, -7.4600, -7.7600, -8.0600, -8.3700, -8.6700, -8.9700, -9.2700, -9.5800,
                    -9.8800, -10.1900, -10.4900, -10.8000, -11.1200, -11.4300, -11.7400, -12.0600, -12.3800, -12.6900,
                    -13.0200, -13.3400, -13.6700, -14.0000, -14.3200, -14.6500, -14.9900, -15.3200, -15.6500, -15.9800,
                    -16.3100, -16.6300, -16.9600, -17.2800, -17.5900, -17.8900, -18.1900, -18.4700, -18.7500, -19.0000,
                    -19.2500, -19.4700, -19.6800, -19.8700, -20.0300, -20.1800, -20.3000, -20.4000, -20.4800, -20.5400,
                    -20.5900, -20.6100, -20.6200, -20.6200, -20.6000, -20.5700, -20.5300, -20.4900, -20.4400, -20.3800,
                    -20.3200, -20.2600, -20.1900, -20.1300, -20.0700, -20.0000, -19.9400, -19.8800, -19.8300, -19.7700,
                    -19.7200, -19.6700, -19.6300, -19.5900]

        self.horizontal_pattern = interp1d(PHI_VALS, G_H_VALS)

    def initialize_vertical_pattern(self):
        """
        Initializes the antenna element vertical radiation pattern.
        This is done in initialization time to save some computation
        :return: None
        """

        THETA_VALS = np.arange(-180, 180, step=1)
        G_V_VALS = [-35.0800, -35.9000, -36.8600, -37.8400, -38.7300, -39.5300, -40.2900, -41.1200, -42.1000, -43.1100,
                    -43.7500, -43.8100, -43.7900, -44.3000, -45.4200, -46.0200, -44.7200, -42.5700, -40.8400, -39.6600,
                    -38.8500, -38.1600, -37.4800, -36.8500, -36.4400, -36.4000, -36.8600, -37.8700, -39.4100, -41.2900,
                    -43.1800, -44.7400, -46.0900, -47.9300, -51.6100, -59.8900, -51.3500, -44.8000, -41.2800, -39.4500,
                    -38.8700, -39.2900, -40.4800, -41.9300, -42.9300, -43.1600, -42.9000, -42.4500, -42.0400, -42.0100,
                    -42.7300, -44.4200, -47.2900, -51.6800, -57.5500, -54.1500, -48.2100, -44.5300, -42.4400, -41.5900,
                    -41.6800, -42.3400, -43.0400, -43.3300, -43.0500, -42.0600, -40.4900, -38.9100, -37.8400, -37.5100,
                    -38.0300, -39.4900, -42.0900, -46.2400, -52.1800, -52.7400, -49.5100, -48.7200, -50.1500, -50.1800,
                    -45.2500, -40.9200, -38.0800, -36.3700, -35.5200, -35.3000, -35.4500, -35.6000, -35.4300, -34.8100,
                    -33.9400, -33.0300, -32.2500, -31.6700, -31.3400, -31.2700, -31.4000, -31.6800, -31.9600, -32.1500,
                    -32.1900, -32.0800, -31.8500, -31.5700, -31.3000, -31.1300, -31.1600, -31.4900, -32.2000, -33.3700,
                    -35.0800, -37.3500, -39.8700, -41.1700, -39.9100, -37.7900, -36.0700, -34.8900, -34.0500, -33.2500,
                    -32.2900, -31.2000, -30.2300, -29.5400, -29.2300, -29.3300, -29.8300, -30.7300, -31.9700, -33.4200,
                    -34.8300, -35.9400, -36.4500, -35.9300, -34.3000, -32.2500, -30.4600, -29.1700, -28.3800, -27.9200,
                    -27.3400, -26.1600, -24.3200, -22.2400, -20.2900, -18.6100, -17.2200, -16.1000, -15.1900, -14.4600,
                    -13.9000, -13.5300, -13.3700, -13.4800, -13.9000, -14.7100, -16.0100, -17.9300, -20.7200, -25.0200,
                    -32.9900, -41.3500, -30.3800, -27.1200, -26.4600, -28.1200, -34.9600, -34.1300, -22.9500, -17.1600,
                    -13.1300, -10.0500, -7.6000, -5.6300, -4.0300, -2.7500, -1.7500, -0.9900, -0.4500, -0.1300, -0.0000,
                    -0.0700, -0.3500, -0.8400, -1.5600, -2.5300, -3.7900, -5.3900, -7.4200, -10.0500, -13.6100, -19.0300,
                    -31.4600, -26.5900, -19.6500, -16.6800, -15.1800, -14.5100, -14.4300, -14.8300, -15.6500, -16.9000,
                    -18.6000, -20.8300, -23.6300, -26.7800, -28.7800, -28.0800, -26.4400, -25.2300, -24.6000, -24.4500,
                    -24.6500, -25.0600, -25.5600, -26.0100, -26.3700, -26.6200, -26.8000, -27.0300, -27.4400, -28.2000,
                    -29.4800, -31.2200, -32.2800, -30.7700, -28.0400, -25.7500, -24.1700, -23.1900, -22.6500, -22.4000,
                    -22.2800, -22.1800, -22.0800, -22.0200, -22.0700, -22.3300, -22.8300, -23.6000, -24.5600, -25.5600,
                    -26.3700, -26.8100, -26.8100, -26.5000, -26.1200, -25.9000, -25.9500, -26.3000, -26.8800, -27.4600,
                    -27.7300, -27.4300, -26.6300, -25.6300, -24.7500, -24.1200, -23.7400, -23.5100, -23.2700, -22.8400,
                    -22.1700, -21.3600, -20.6200, -20.1000, -19.9200, -20.0900, -20.5900, -21.3500, -22.2700, -23.2200,
                    -24.1300, -24.9600, -25.7700, -26.6800, -27.8400, -29.2600, -30.7600, -31.9900, -33.0000, -34.3400,
                    -36.7400, -40.7500, -44.6800, -43.3500, -41.9400, -42.5800, -44.5100, -45.2200, -44.5400, -45.2100,
                    -47.7100, -45.9800, -41.1500, -38.0700, -36.5000, -35.9700, -36.0700, -36.4800, -36.8900, -37.0200,
                    -36.7200, -36.0800, -35.5000, -35.2900, -35.6400, -36.6500, -38.4400, -41.3300, -46.3100, -57.5300,
                    -50.6300, -44.5900, -41.7500, -40.1500, -39.1100, -38.3100, -37.7000, -37.2900, -37.0900, -37.1100,
                    -37.3900, -38.0700, -39.3700, -41.5500, -44.9500, -49.9100, -52.6500, -48.4400, -44.2400, -40.7200,
                    -37.7000, -35.1900, -33.1500, -31.5400, -30.2900, -29.3600, -28.7000, -28.3100, -28.1900, -28.3300,
                    -28.7300, -29.3800, -30.2700, -31.4000, -32.7500, -34.3000, -35.9600, -37.4900, -38.3500, -38.2000,
                    -37.3500, -36.3700, -35.5500, -34.9200, -34.4400, -34.1500, -34.1200, -34.4200]

        self.vertical_pattern = interp1d(THETA_VALS, G_V_VALS)

    def element_pattern(self, phi: np.array, theta: np.array) -> np.array:
        """
        Calculates the element radiation pattern gain
        :return: gain (np.array): element radiation pattern gain value
        """

        phi = np.clip(phi, -180, 179)
        theta = np.clip(theta, -180, 179)

        # horizontal gain
        g_h = self.horizontal_pattern(phi)

        # vertical gain
        g_v = self.vertical_pattern(theta)

        # element radiation pattern gain
        gain = g_h + g_v

        return gain


if __name__ == '__main__':
    from matplotlib import pyplot as plt

    antenna = AntennaADU4516R0()

    theta_vec = np.arange(-180, 180, step=1)
    phi_vec = np.arange(-180, 180, step=1)

    horizontal_pattern_0deg = np.zeros(phi_vec.shape)
    horizontal_pattern_10deg = np.zeros(phi_vec.shape)
    horizontal_pattern_30deg = np.zeros(phi_vec.shape)
    horizontal_pattern_60deg = np.zeros(phi_vec.shape)

    vertical_pattern_0deg = np.zeros(theta_vec.shape)
    vertical_pattern_30deg = np.zeros(theta_vec.shape)
    vertical_pattern_60deg = np.zeros(theta_vec.shape)
    vertical_pattern_90deg = np.zeros(theta_vec.shape)
    vertical_pattern_120deg = np.zeros(theta_vec.shape)

    for theta, phi, index in zip(theta_vec, phi_vec, range(len(theta_vec))):
        # horizontal patterns (varying the elevation angle)
        horizontal_pattern_0deg[index] = antenna.element_pattern(phi, 0)
        horizontal_pattern_10deg[index] = antenna.element_pattern(phi, 10)
        horizontal_pattern_30deg[index] = antenna.element_pattern(phi, 30)
        horizontal_pattern_60deg[index] = antenna.element_pattern(phi, 60)

        # vertical patterns (varying the azimuth angle)
        vertical_pattern_0deg[index] = antenna.element_pattern(0, theta)
        vertical_pattern_30deg[index] = antenna.element_pattern(30, theta)
        vertical_pattern_60deg[index] = antenna.element_pattern(60, theta)
        vertical_pattern_90deg[index] = antenna.element_pattern(90, theta)
        vertical_pattern_120deg[index] = antenna.element_pattern(120, theta)

    # plotting the radiation patterns
    plt.figure(1)
    plt.plot(theta_vec, horizontal_pattern_0deg, label='elevation = 0 degrees')
    plt.plot(theta_vec, horizontal_pattern_10deg, label='elevation = 10 degrees')
    plt.plot(theta_vec, horizontal_pattern_30deg, label='elevation = 30 degrees')
    plt.plot(theta_vec, horizontal_pattern_60deg, label='elevation = 60 degrees')
    plt.title('Horizontal radiation pattern')
    plt.xlabel('Azimuth (degrees)')
    plt.ylabel('Gain (dBi)')
    plt.legend()

    plt.figure(2)
    plt.plot(phi_vec, vertical_pattern_0deg, label='azimuth = 0 degrees')
    plt.plot(phi_vec, vertical_pattern_30deg, label='azimuth = 30 degrees')
    plt.plot(phi_vec, vertical_pattern_60deg, label='azimuth = 60 degrees')
    plt.plot(phi_vec, vertical_pattern_90deg, label='azimuth = 90 degrees')
    plt.plot(phi_vec, vertical_pattern_120deg, label='azimuth = 120 degrees')
    plt.title('Vertical radiation pattern')
    plt.xlabel('Elevation (degrees)')
    plt.ylabel('Gain (dBi)')
    plt.legend()

    plt.show()





